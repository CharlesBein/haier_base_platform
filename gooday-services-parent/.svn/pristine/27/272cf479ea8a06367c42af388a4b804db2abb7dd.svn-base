一、SOA服务化核心框架修改记录-赵士杰


1.1、新技术框架主要修改记录：
	1、核心技术选型版本统一调整（spring4.1.6/mybatis3.2.8/zookeeper3.4.6）
	2、技术框架支持物理分页组件（mybatis内置的分页为逻辑分页)、分页工具类封装等工作
	3、技术服务框架命名规范相关改造工作（同步修改所有配置文件）
	4、技术框架的dubbo标签配置简化（如：原来的配置<dubbo:protocol 可简写为：<d:protocol）
	5、技术框架分工程应用解耦的拆分工作
	6、技术框架DEMO示例代码的开发（增删改查、分页等完整例子）
	7、框架配置文件按功能拆分、配置文件的补充
	8、dao层接口方式重用性低，注解复杂度高，对于经验不足的开发者工作效率低，（改为封装DAO数据操作层基类，业务子类直接继承基类即拥有所以操作功能
	9、各业务代码解耦,由之前所以项目实体统一放在common工程下，改为各自业务建立自身的model工程


1.2、命名修改记录：
	1、service包名：impl.inside   改为   service.xxxx.impl（同步修改所有配置文件）

	2、包名cn开头是否改成com（影响范围太大，暂不考虑改名）

	3、web层包名 cn.gooday.logistics改为：cn.gooday.logistics.web（同步修改所有配置文件

	4、dubbo提供者项目启动入口包名由provider 改为 main

	5、大包名cn.gooday.service.logistics 改为 cn.gooday.logistics（同步修改所有配置文件）

	6、服务层spring配置文件按职责拆分（分为：provider.xml、spring-root.xml、spring-mybatis.xml、spring-db.xml）

	7、增加mybatis调优配置文件：mybatis-config.xml
	
	8、增加dubbo.properties配置文件，可显示的调整dubbo一些参数


1.3、注意事项：

1、版本升级考虑（至少两个节点，交替服务版本升级）       所有的服务提供者和调用者都必须带有服务版本号，以备服务升级 *

2、控制台和服务监控中心建设（开发、测试、预生产、生产）    服务提供者应用负责提供接口文档

3、zookeeper集群规模（生产环境建议5台集群规模）


1.4讨论点：

1、dubbo服务化使用模式（1、完全服务化  2、对外服务化（自身web调用本地化））


需求：

1、多结果集合并！
