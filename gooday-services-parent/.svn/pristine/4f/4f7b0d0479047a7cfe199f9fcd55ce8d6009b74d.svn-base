<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
			default-autowire="byName" default-lazy-init="false"><alias name="dataSource_Druid" alias="dataSource"/>
	
	

	<!-- alibaba Druid datasource -->
    <bean name="dataSource_Druid" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--  基本属性 url、user、password  数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <!--<property name="driverClassName" value="${jdbc.driver}"></property>-->
        <property name="url" value="${framework.jdbc.url}"></property>
        <property name="username" value="${framework.jdbc.username}"></property>
        <property name="password" value="${framework.jdbc.password}"></property>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxActive" value="${framework.jdbc.maxActive}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${framework.jdbc.maxWait}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,slf4j" />
        <!--时间配置-->
        <property name="loginTimeout" value="10"/>
        <property name="queryTimeout" value="10"/>
        <property name="transactionQueryTimeout" value="10"/>
    </bean>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	
	
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
    <tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
            <tx:method name="query*" read-only="true" propagation="NOT_SUPPORTED"/>
            <tx:method name="select*" read-only="true" propagation="NOT_SUPPORTED"/>
            <tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED"/>
            <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED"/>

            <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.RuntimeException"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.RuntimeException"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
	</tx:advice>
	
	
	<aop:config proxy-target-class="true">
<!--         <aop:pointcut id="pointcut" expression="execution(public * cn.gooday.service.logistics.impl.inside.*Impl.*(..))" /> -->
<!--         <aop:pointcut id="pointcut" expression="execution(public * cn.*..*.service.*.impl.*ServiceImpl.*(..))" /> -->
        <aop:pointcut id="pointcut" expression="execution(public * cn.*..*.service.*..*.impl.*ServiceImpl.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
	
</beans>
